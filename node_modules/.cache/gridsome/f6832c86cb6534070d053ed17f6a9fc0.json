{"remainingRequest":"/home/simplonco/Bureau/my-first-wp-project/node_modules/babel-loader/lib/index.js??ref--1-1!/home/simplonco/Bureau/my-first-wp-project/node_modules/gridsome/app/fetch.js","dependencies":[{"path":"/home/simplonco/Bureau/my-first-wp-project/node_modules/gridsome/app/fetch.js","mtime":499162500000},{"path":"/home/simplonco/Bureau/my-first-wp-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/simplonco/Bureau/my-first-wp-project/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/home/simplonco/Bureau/my-first-wp-project/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport prefetch from \"./utils/prefetch\";\nimport { unslashEnd, stripPageParam } from \"./utils/helpers\";\nimport { NOT_FOUND_PATH } from '~/.temp/constants';\nvar dataUrl = process.env.DATA_URL;\nvar isPrefetched = {};\nvar isLoaded = {};\nexport default (function (route) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$shouldPrefet = options.shouldPrefetch,\n      shouldPrefetch = _options$shouldPrefet === void 0 ? false : _options$shouldPrefet,\n      _options$force = options.force,\n      force = _options$force === void 0 ? false : _options$force;\n\n  if (!route.meta.data) {\n    return Promise.resolve({\n      data: null,\n      context: {}\n    });\n  }\n\n  if (!process.isStatic) {\n    var getJSON = function getJSON(route) {\n      return new Promise(function (resolve, reject) {\n        fetch(process.env.GRAPHQL_ENDPOINT, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            page: route.params.page ? Number(route.params.page) : null,\n            path: route.name === '*' ? NOT_FOUND_PATH : stripPageParam(route)\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(resolve).catch(reject);\n      });\n    };\n\n    return new Promise(function (resolve, reject) {\n      if (force || !isLoaded[route.fullPath]) {\n        isLoaded[route.fullPath] = getJSON(route);\n      }\n\n      isLoaded[route.fullPath].then(function (res) {\n        if (res.errors) reject(res.errors[0]);else if (res.code) resolve({\n          code: res.code\n        });else resolve({\n          data: res.data,\n          context: res.extensions ? res.extensions.context : {}\n        });\n      }).catch(reject);\n    });\n  }\n\n  return new Promise(function (resolve, reject) {\n    var loadJSON = function loadJSON(_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          group = _ref2[0],\n          hash = _ref2[1];\n\n      var jsonPath = dataUrl + \"\".concat(group, \"/\").concat(hash, \".json\");\n\n      if (shouldPrefetch && !isLoaded[jsonPath]) {\n        if (!isPrefetched[jsonPath]) {\n          isPrefetched[jsonPath] = prefetch(jsonPath);\n        }\n\n        return isPrefetched[jsonPath].then(function () {\n          return resolve();\n        }).catch(function () {\n          return resolve();\n        });\n      }\n\n      if (!isLoaded[jsonPath]) {\n        isLoaded[jsonPath] = fetchJSON(jsonPath);\n      }\n\n      return isLoaded[jsonPath].then(function (res) {\n        if (res.errors) reject(res.errors[0]);else resolve(res);\n      }).catch(reject);\n    };\n\n    var name = route.name,\n        data = route.meta.data;\n    var usePath = name === '*' ? NOT_FOUND_PATH : route.path;\n    var path = unslashEnd(usePath) || '/';\n\n    if (typeof data === 'function') {\n      data().then(function (data) {\n        if (data[path]) loadJSON(data[path]);else resolve({\n          code: 404\n        });\n      }).catch(reject);\n    } else {\n      loadJSON(data);\n    }\n  });\n});\n\nfunction fetchJSON(jsonPath) {\n  return new Promise(function (resolve, reject) {\n    var req = new XMLHttpRequest();\n    req.open('GET', jsonPath, true);\n    req.withCredentials = true;\n\n    req.onload = function () {\n      switch (req.status) {\n        case 200:\n          {\n            var results;\n\n            try {\n              results = JSON.parse(req.responseText);\n            } catch (err) {\n              return reject(new Error(\"Failed to parse JSON from \".concat(jsonPath, \". \").concat(err.message, \".\")));\n            }\n\n            return resolve(results);\n          }\n\n        case 404:\n          {\n            var error = new Error(req.statusText);\n            error.code = req.status;\n            return reject(error);\n          }\n      }\n\n      reject(new Error(\"Failed to fetch \".concat(jsonPath, \".\")));\n    };\n\n    req.send(null);\n  });\n}",{"version":3,"sources":["/home/simplonco/Bureau/my-first-wp-project/node_modules/gridsome/app/fetch.js"],"names":["prefetch","unslashEnd","stripPageParam","NOT_FOUND_PATH","dataUrl","process","env","DATA_URL","isPrefetched","isLoaded","route","options","shouldPrefetch","force","meta","data","Promise","resolve","context","isStatic","getJSON","reject","fetch","GRAPHQL_ENDPOINT","method","headers","body","JSON","stringify","page","params","Number","path","name","then","res","json","catch","fullPath","errors","code","extensions","loadJSON","group","hash","jsonPath","fetchJSON","usePath","req","XMLHttpRequest","open","withCredentials","onload","status","results","parse","responseText","err","Error","message","error","statusText","send"],"mappings":"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","sourcesContent":["import prefetch from './utils/prefetch'\nimport { unslashEnd, stripPageParam } from './utils/helpers'\nimport { NOT_FOUND_PATH } from '~/.temp/constants'\n\nconst dataUrl = process.env.DATA_URL\nconst isPrefetched = {}\nconst isLoaded = {}\n\nexport default (route, options = {}) => {\n  const { shouldPrefetch = false, force = false } = options\n\n  if (!route.meta.data) {\n    return Promise.resolve({ data: null, context: {}})\n  }\n\n  if (!process.isStatic) {\n    const getJSON = function (route) {\n      return new Promise((resolve, reject) => {\n        fetch(process.env.GRAPHQL_ENDPOINT, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            page: route.params.page ? Number(route.params.page) : null,\n            path: route.name === '*' ? NOT_FOUND_PATH : stripPageParam(route)\n          })\n        })\n          .then(res => res.json())\n          .then(resolve)\n          .catch(reject)\n      })\n    }\n\n    return new Promise((resolve, reject) => {\n      if (force || !isLoaded[route.fullPath]) {\n        isLoaded[route.fullPath] = getJSON(route)\n      }\n\n      isLoaded[route.fullPath]\n        .then(res => {\n          if (res.errors) reject(res.errors[0])\n          else if (res.code) resolve({ code: res.code })\n          else resolve({\n            data: res.data,\n            context: res.extensions\n              ? res.extensions.context\n              : {}\n          })\n        })\n        .catch(reject)\n    })\n  }\n\n  return new Promise((resolve, reject) => {\n    const loadJSON = ([ group, hash ]) => {\n      const jsonPath = dataUrl + `${group}/${hash}.json`\n\n      if (shouldPrefetch && !isLoaded[jsonPath]) {\n        if (!isPrefetched[jsonPath]) {\n          isPrefetched[jsonPath] = prefetch(jsonPath)\n        }\n\n        return isPrefetched[jsonPath]\n          .then(() => resolve())\n          .catch(() => resolve())\n      }\n\n      if (!isLoaded[jsonPath]) {\n        isLoaded[jsonPath] = fetchJSON(jsonPath)\n      }\n\n      return isLoaded[jsonPath]\n        .then(res => {\n          if (res.errors) reject(res.errors[0])\n          else resolve(res)\n        })\n        .catch(reject)\n    }\n\n    const { name, meta: { data }} = route\n    const usePath = name === '*' ? NOT_FOUND_PATH : route.path\n    const path = unslashEnd(usePath) || '/'\n\n    if (typeof data === 'function') {\n      data().then(data => {\n        if (data[path]) loadJSON(data[path])\n        else resolve({ code: 404 })\n      }).catch(reject)\n    } else {\n      loadJSON(data)\n    }\n  })\n}\n\nfunction fetchJSON (jsonPath) {\n  return new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest()\n\n    req.open('GET', jsonPath, true)\n    req.withCredentials = true\n\n    req.onload = () => {\n      switch (req.status) {\n        case 200: {\n          let results\n\n          try {\n            results = JSON.parse(req.responseText)\n          } catch (err) {\n            return reject(\n              new Error(`Failed to parse JSON from ${jsonPath}. ${err.message}.`)\n            )\n          }\n\n          return resolve(results)\n        }\n        case 404: {\n          const error = new Error(req.statusText)\n          error.code = req.status\n          return reject(error)\n        }\n      }\n\n      reject(new Error(`Failed to fetch ${jsonPath}.`))\n    }\n\n    req.send(null)\n  })\n}\n"]}]}